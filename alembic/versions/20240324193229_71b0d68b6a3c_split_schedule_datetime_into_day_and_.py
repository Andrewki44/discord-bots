"""split schedule datetime into day and time

Revision ID: 71b0d68b6a3c
Revises: 14c231a6deb8
Create Date: 2024-03-24 19:32:29.191074

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "71b0d68b6a3c"
down_revision = "14c231a6deb8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.add_column(sa.Column("day", sa.String(), nullable=False))
        batch_op.add_column(sa.Column("time", sa.Time(), nullable=False))
        batch_op.drop_constraint("uq_schedule_date_time", type_="unique")
        batch_op.create_unique_constraint(
            batch_op.f("uq_schedule_day"), ["day", "time"]
        )
        batch_op.drop_column("date_time")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("schedule", schema=None) as batch_op:
        batch_op.add_column(sa.Column("date_time", sa.DATETIME(), nullable=False))
        batch_op.drop_constraint(batch_op.f("uq_schedule_day"), type_="unique")
        batch_op.create_unique_constraint("uq_schedule_date_time", ["date_time"])
        batch_op.drop_column("time")
        batch_op.drop_column("day")

    # ### end Alembic commands ###
